interface CarrerProps {
  title: string
  contents: string
}

export const careerData: CarrerProps[] = [
  {
    title: 'VMS',
    contents:
      '기존 킷캣버전의 어플리케이션에 CSS 반응형 작업과 버전 업그레이드 그리고 Nexacro 개선 작업을 하는 프로젝트입니다.  Android Studio를 통해 SDK 파일을 만들어 Mobile Able에 연결하였으며 gradle 변환을 진행하였습니다. 4년차 퍼블리셔분과 CSS 작업을 같이 진행하였는데, 상위 컴포넌트가 하위 컴포넌트를 감싸는데 높이가 없는 상황이 있었습니다. 퍼블리셔분이 이 문제를 어려워 하여 저에게 맡겨주셔서 살펴보니 position: fixed가 설정되어있었습니다. 이후 display: flex 방식으로 변경하여 문제를 해결하였으며 퍼블리셔 분의 인정을 받았었습니다.  Nexacro 작업으로는 현대 오토에버의 공용 함수를 많이 사용하였으며 권한, 화면에 따른 많은 분기 처리를 진행하였습니다.  유지보수 및 개선을 위한 작업이기 때문에 다른 사람의 코드를 이해한 후 연관되는 화면에 오류가 없는지 꼼꼼하게 확인하며 진행했습니다.'
  },
  {
    title: '표준\n프레임워크',
    contents:
      '프론트는 타임리프 환경에 순수 바닐라 JS, 백으로는 스프링부트를 사용한 프로젝트였습니다. 프론트는 타임리프의 layout.js에 각자 만드는 컴포넌트를 넣는 방식이였으며, UI는 ToastUI를 사용했습니다. 공통함수가 계속 변경되어 오류가 빈번한 어려움이 있었지만, 오류가 날 때 마다 공통함수에 접근해 어떻게 만들었는지 파악한 후 그에 맞춰 수정하는 좋은 경험을 했습니다.  백엔드의 구조는 MVC 패턴이였는데 처음에 구조가 이해되지 않아 어려움이 있었습니다. 하지만 야근 및 집에서의 spring boot 개인 공부를 진행해 프로젝트를 진행했고, 이후엔 어느정도 익숙해져 능숙하게 진행했습니다. 이후 사원의 프로젝트를 평가하는 페이지를 제작하였으며 달력의 데이트피커의 시작 및 끝 날짜의 예외처리 공통 함수를 제작하였습니다.'
  }
]

// {
//     title: 'NIDS',
//     contents:
//       '현대 오토에버의 차량 네트워크 프로젝트로 Nexacro 및 Oracle DB 사용한 프로젝트입니다. Nexacro의 심화 프로젝트로 3중 깊이를 가지고 7개 필터를 가진 콤보박스 화면을 Nexacro 및 JS 로직을 사용해서 구현하였습니다. 이 화면에서의 Oracle 쿼리 작업으로, 기존 테이블의 추가로 join한 테이블의 결과를 하나의 열로 만들어야 했는데 이때 Pivot 함수를 사용해서 문제를 해결했었습니다. 또한 4개의 Table을 join한 6개의 테이블 결과를 비교하는 Oracle 쿼리를 작성했었는데 with temp절로 6개의 테이블의 결과를 묶고 이후 left join, light join, group by를 진행해 비교 연산을 만들었습니다. Oracle의 group by에 대해 많이 공부했고 알게되었습니다. 유지보수 프로젝트로써 한 화면을 변경하면 연관된 다른 화면이 많았기 때문에 어디에 영향을 끼치는지, 오류는 없는지 등 꼼꼼하게 확인하는 능력을 키웠습니다.'
//   },
//   {
//     title: '머신러닝\n프로젝트',
//     contents:
//       '머신러닝 프로젝트에 프론트를 담당했습니다. React로 작업했으며 이후 csv 파일 및 파일 설정을 위한 백엔드가 필요해져 백을 맡을 인원이 없어 Node.js로 백엔드도 함께 진행하였습니다. React의 경우 반복되는 컴포넌트, 함수를 따로 관리하였고 디자인, 퍼블리싱, 프론트 작업을 맡았었습니다. 부트스트랩의 드롭다운, 스위치, 슬라이더 등을 가져와 수정하여 사용하였으며 react-chart.js 의 그래프를 사용하여 데이터를 정렬하여 보여주었습니다. 또한 선택한 데이터의 수 만큼 4번 필터링 하는 기능이 필요하여 재귀 함수를 사용해 구현하였습니다. 백의 경우 통신을 위해 express를 사용하였으며 fs와 csv-parser을 사용해 csv 파싱을 진행하였습니다. json을 가공할 때에는 시간복잡도를 생각해 최대한 효율적인 코드를 작성하려고 노력했습니다. 또한 multer을 사용해 파일을 업로드 및 다운로드 하는 로직을 제작하였습니다.'
//   },
//   {
//     title: '군수\n프로젝트',
//     contents:
//       '현대오토에버의 군수 프로젝트로 Nexacro 및 Oracle DB 사용한 프로젝트입니다. 기존 JSP 화면으로 만들어진 군수 프로젝트를 넥사크로로 변환하여 개선하는 프로젝트였습니다. 화면정의서가 나오지 않아 JSP 화면의 로직 및 코드를 보며 화면을 제작했기 때문에 부족한점이 많았고, 화면을 많이 뒤엎고 만들고를 반복하여 넥사크로에 대해 많이 공부했었습니다. 또한 Oracle join을 이용해 테이블을 연관 테이블을 join한 후Select, Insert, Update, Delete 문을 사용해 쿼리를 짰습니다. 실제로 DB를 사용해보며 기본키, 외래키 등 DB와 관련된 많은 공부를 하였습니다. 현대 오토에버의 공통 함수를 사용하였기 때문에 대규모 프로젝트의 파일 구조에 대해서도 알아갔던 프로젝트입니다.'
//   },
//   {
//     title: 'Nexacro\n프로젝트',
//     contents:
//       'Nexacro 실무에 도입하기 전 Nexacro에 대해 처음으로 공부해본 프로젝트였습니다. 기본적으로 dataset과 grid에 대해 공부하였으며 Nexacro가 어떻게 서버와 통신하는지, xml 파일에 쿼리를 어떻게 작성하는지 등을 배웠습니다. 이후 활용하기위해 책상 자리바꾸기, AI와 가위바위보, 팩맨 등의 게임을 만들며 Nexacro에 대해 공부한 프로젝트입니다.'
//   },
//   {
//     title: 'Oracle\nTo\nMaria',
//     contents:
//       'Oracle DB는 사용하려면 돈이 들기 때문에 기존 Oracle의 쿼리 규칙을 Maria의 쿼리 규칙으로 변환하는 프로젝트입니다. Python을 사용해 제작하였으며 socket을 통해 통신하였습니다. Oracle의 DML을 변환하는 것을 목표로 하였으며 DBeaver를 사용하여 쿼리 로그를 가져와 Python으로 변환하였습니다. Python으로 변환할 함수들을 모듈로 만들어 재사용 및 유지관리 하기 쉽도록 제작하였고, Oracle 쿼리 로그를 Marai 쿼리 로그로 변환하는 작업을 진행했었습니다.'
//   }
